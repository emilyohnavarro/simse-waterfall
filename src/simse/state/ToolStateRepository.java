/* File generated by: simse.codegenerator.stategenerator.RepositoryGenerator */
package simse.state;

import simse.adts.objects.*;
import java.util.*;

public class ToolStateRepository implements Cloneable {
	RequirementsCaptureToolStateRepository r0;
	DesignEnvironmentStateRepository d1;
	IDEStateRepository i2;
	AutomatedTestingToolStateRepository a3;

	public ToolStateRepository() {
		r0 = new RequirementsCaptureToolStateRepository();
		d1 = new DesignEnvironmentStateRepository();
		i2 = new IDEStateRepository();
		a3 = new AutomatedTestingToolStateRepository();
	}

	public Object clone() {
		try {
			ToolStateRepository cl = (ToolStateRepository) (super.clone());
			cl.r0 = (RequirementsCaptureToolStateRepository) (r0.clone());
			cl.d1 = (DesignEnvironmentStateRepository) (d1.clone());
			cl.i2 = (IDEStateRepository) (i2.clone());
			cl.a3 = (AutomatedTestingToolStateRepository) (a3.clone());
			return cl;
		} catch (CloneNotSupportedException c) {
			System.out.println(c.getMessage());
		}
		return null;
	}

	public Vector<Tool> getAll() {
		Vector<Tool> all = new Vector<Tool>();
		all.addAll(r0.getAll());
		all.addAll(d1.getAll());
		all.addAll(i2.getAll());
		all.addAll(a3.getAll());
		return all;
	}

	public RequirementsCaptureToolStateRepository getRequirementsCaptureToolStateRepository() {
		return r0;
	}

	public DesignEnvironmentStateRepository getDesignEnvironmentStateRepository() {
		return d1;
	}

	public IDEStateRepository getIDEStateRepository() {
		return i2;
	}

	public AutomatedTestingToolStateRepository getAutomatedTestingToolStateRepository() {
		return a3;
	}
}