/* File generated by: simse.codegenerator.stategenerator.RepositoryGenerator */
package simse.state;

import simse.adts.objects.*;
import java.util.*;

public class IDEStateRepository implements Cloneable {
	private Vector<IDE> ides;

	public IDEStateRepository() {
		ides = new Vector<IDE>();
	}

	public Object clone() {
		try {
			IDEStateRepository cl = (IDEStateRepository) super.clone();
			Vector<IDE> clonedides = new Vector<IDE>();
			for (int i = 0; i < ides.size(); i++) {
				clonedides.addElement((IDE) (ides.elementAt(i).clone()));
			}
			cl.ides = clonedides;
			return cl;
		} catch (CloneNotSupportedException c) {
			System.out.println(c.getMessage());
		}
		return null;
	}

	public void add(IDE a) {
		boolean add = true;
		for (int i = 0; i < ides.size(); i++) {
			IDE ide = ides.elementAt(i);
			if (ide.getName().equals(a.getName())) {
				add = false;
				break;
			}
		}
		if (add) {
			ides.add(a);
		}
	}

	public IDE get(String name) {
		for (int i = 0; i < ides.size(); i++) {
			if (ides.elementAt(i).getName().equals(name)) {
				return ides.elementAt(i);
			}
		}
		return null;
	}

	public Vector<IDE> getAll() {
		return ides;
	}

	public boolean remove(IDE a) {
		return ides.remove(a);
	}
}