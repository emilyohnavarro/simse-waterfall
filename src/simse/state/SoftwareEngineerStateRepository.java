/* File generated by: simse.codegenerator.stategenerator.RepositoryGenerator */
package simse.state;

import simse.adts.objects.*;
import java.util.*;

public class SoftwareEngineerStateRepository implements Cloneable {
	private Vector<SoftwareEngineer> softwareengineers;

	public SoftwareEngineerStateRepository() {
		softwareengineers = new Vector<SoftwareEngineer>();
	}

	public Object clone() {
		try {
			SoftwareEngineerStateRepository cl = (SoftwareEngineerStateRepository) super
					.clone();
			Vector<SoftwareEngineer> clonedsoftwareengineers = new Vector<SoftwareEngineer>();
			for (int i = 0; i < softwareengineers.size(); i++) {
				clonedsoftwareengineers
						.addElement((SoftwareEngineer) (softwareengineers
								.elementAt(i).clone()));
			}
			cl.softwareengineers = clonedsoftwareengineers;
			return cl;
		} catch (CloneNotSupportedException c) {
			System.out.println(c.getMessage());
		}
		return null;
	}

	public void add(SoftwareEngineer a) {
		boolean add = true;
		for (int i = 0; i < softwareengineers.size(); i++) {
			SoftwareEngineer softwareengineer = softwareengineers.elementAt(i);
			if (softwareengineer.getName().equals(a.getName())) {
				add = false;
				break;
			}
		}
		if (add) {
			softwareengineers.add(a);
		}
	}

	public SoftwareEngineer get(String name) {
		for (int i = 0; i < softwareengineers.size(); i++) {
			if (softwareengineers.elementAt(i).getName().equals(name)) {
				return softwareengineers.elementAt(i);
			}
		}
		return null;
	}

	public Vector<SoftwareEngineer> getAll() {
		return softwareengineers;
	}

	public boolean remove(SoftwareEngineer a) {
		return softwareengineers.remove(a);
	}
}