/* File generated by: simse.codegenerator.stategenerator.ADTGenerator */
package simse.adts.objects;

public class Code extends Artifact implements Cloneable {
	private String name;
	private double size;
	private double percentcomplete;
	private double amountintegrated;
	private double percentintegrated;
	private int numauthors;
	private double numknownerrors;
	private double numunknownerrors;
	private double percenterroneous;
	private double numunknowntemp;
	private int completenessdiffreqdoc;
	private int completenessdiffdesdoc;
	private int completenessdifftestplan;
	private int pcntintegrateddiffdesdoc;

	public Code(String n0, double s1, double p2, double a3, double p4, int n5,
			double n6, double n7, double p8, double n9, int c10, int c11,
			int c12, int p13) {
		setName(n0);
		setSize(s1);
		setPercentComplete(p2);
		setAmountIntegrated(a3);
		setPercentIntegrated(p4);
		setNumAuthors(n5);
		setNumKnownErrors(n6);
		setNumUnknownErrors(n7);
		setPercentErroneous(p8);
		setNumUnknownTemp(n9);
		setCompletenessDiffReqDoc(c10);
		setCompletenessDiffDesDoc(c11);
		setCompletenessDiffTestPlan(c12);
		setPcntIntegratedDiffDesDoc(p13);
	}

	public Object clone() {
		Code cl = (Code) (super.clone());
		cl.name = name;
		cl.size = size;
		cl.percentcomplete = percentcomplete;
		cl.amountintegrated = amountintegrated;
		cl.percentintegrated = percentintegrated;
		cl.numauthors = numauthors;
		cl.numknownerrors = numknownerrors;
		cl.numunknownerrors = numunknownerrors;
		cl.percenterroneous = percenterroneous;
		cl.numunknowntemp = numunknowntemp;
		cl.completenessdiffreqdoc = completenessdiffreqdoc;
		cl.completenessdiffdesdoc = completenessdiffdesdoc;
		cl.completenessdifftestplan = completenessdifftestplan;
		cl.pcntintegrateddiffdesdoc = pcntintegrateddiffdesdoc;
		return cl;
	}

	public String getName() {
		return name;
	}

	public void setName(String a) {
		name = a;
	}

	public double getSize() {
		return size;
	}

	public void setSize(double a) {
		if (a < 0.0) {
			size = 0.0;
		} else {
			size = a;
		}
	}

	public double getPercentComplete() {
		return percentcomplete;
	}

	public void setPercentComplete(double a) {
		if (a < 0.0) {
			percentcomplete = 0.0;
		} else if (a > 100.0) {
			percentcomplete = 100.0;
		} else {
			percentcomplete = a;
		}
	}

	public double getAmountIntegrated() {
		return amountintegrated;
	}

	public void setAmountIntegrated(double a) {
		if (a < 0.0) {
			amountintegrated = 0.0;
		} else {
			amountintegrated = a;
		}
	}

	public double getPercentIntegrated() {
		return percentintegrated;
	}

	public void setPercentIntegrated(double a) {
		if (a < 0.0) {
			percentintegrated = 0.0;
		} else if (a > 100.0) {
			percentintegrated = 100.0;
		} else {
			percentintegrated = a;
		}
	}

	public int getNumAuthors() {
		return numauthors;
	}

	public void setNumAuthors(int a) {
		if (a < 0) {
			numauthors = 0;
		} else {
			numauthors = a;
		}
	}

	public double getNumKnownErrors() {
		return numknownerrors;
	}

	public void setNumKnownErrors(double a) {
		if (a < 0.0) {
			numknownerrors = 0.0;
		} else {
			numknownerrors = a;
		}
	}

	public double getNumUnknownErrors() {
		return numunknownerrors;
	}

	public void setNumUnknownErrors(double a) {
		if (a < 0.0) {
			numunknownerrors = 0.0;
		} else {
			numunknownerrors = a;
		}
	}

	public double getPercentErroneous() {
		return percenterroneous;
	}

	public void setPercentErroneous(double a) {
		if (a < 0.0) {
			percenterroneous = 0.0;
		} else if (a > 100.0) {
			percenterroneous = 100.0;
		} else {
			percenterroneous = a;
		}
	}

	public double getNumUnknownTemp() {
		return numunknowntemp;
	}

	public void setNumUnknownTemp(double a) {
		if (a < 0.0) {
			numunknowntemp = 0.0;
		} else {
			numunknowntemp = a;
		}
	}

	public int getCompletenessDiffReqDoc() {
		return completenessdiffreqdoc;
	}

	public void setCompletenessDiffReqDoc(int a) {
		if (a < 0) {
			completenessdiffreqdoc = 0;
		} else if (a > 1) {
			completenessdiffreqdoc = 1;
		} else {
			completenessdiffreqdoc = a;
		}
	}

	public int getCompletenessDiffDesDoc() {
		return completenessdiffdesdoc;
	}

	public void setCompletenessDiffDesDoc(int a) {
		if (a < 0) {
			completenessdiffdesdoc = 0;
		} else if (a > 1) {
			completenessdiffdesdoc = 1;
		} else {
			completenessdiffdesdoc = a;
		}
	}

	public int getCompletenessDiffTestPlan() {
		return completenessdifftestplan;
	}

	public void setCompletenessDiffTestPlan(int a) {
		if (a < 0) {
			completenessdifftestplan = 0;
		} else if (a > 1) {
			completenessdifftestplan = 1;
		} else {
			completenessdifftestplan = a;
		}
	}

	public int getPcntIntegratedDiffDesDoc() {
		return pcntintegrateddiffdesdoc;
	}

	public void setPcntIntegratedDiffDesDoc(int a) {
		if (a < 0) {
			pcntintegrateddiffdesdoc = 0;
		} else if (a > 1) {
			pcntintegrateddiffdesdoc = 1;
		} else {
			pcntintegrateddiffdesdoc = a;
		}
	}

}