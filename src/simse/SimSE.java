/* File generated by: simse.codegenerator.CodeGenerator */
package simse;

import simse.gui.*;
import simse.state.*;
import simse.logic.*;
import simse.engine.*;
import simse.explanatorytool.Branch;
import simse.explanatorytool.MultipleTimelinesBrowser;

import java.util.ArrayList;

public class SimSE {
	private static ArrayList<Branch> branches = new ArrayList<Branch>();
	private static ArrayList<SimSEGUI> guis = new ArrayList<SimSEGUI>();
	private static MultipleTimelinesBrowser timelinesBrowser = new MultipleTimelinesBrowser();

	public static void startNewBranch(State state, Branch branch) {
		Logic logic = new Logic(state);
		Engine engine = new Engine(logic, state);
		SimSEGUI gui = new SimSEGUI(engine, state, logic, branch,
				timelinesBrowser);
		state.getClock().setGUI(gui);
		gui.setBounds(0, 0, 1024, 744);
		engine.giveGUI(gui);
		logic.getTriggerChecker().update(false, gui);
		branches.add(branch);
		guis.add(gui);
		timelinesBrowser.update();
	}

	public static ArrayList<Branch> getBranches() {
		return branches;
	}

	// returns total number of open branches
	public static int getNumOpenBranches() {
		int numOpen = 0;
		for (Branch b : branches) {
			if (!b.isClosed()) {
				numOpen++;
			}
		}
		return numOpen;
	}

	public static ArrayList<SimSEGUI> getGUIs() {
		return guis;
	}

	public static void main(String args[]) {
		startNewBranch(new State(), new Branch(null, 0, 0, null, null));
	}
}